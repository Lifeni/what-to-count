{
  "version": 3,
  "sources": ["../src/main/index.ts", "../src/main/store.ts"],
  "sourcesContent": ["import { app, BrowserWindow, dialog, ipcMain } from 'electron'\nimport { join } from 'path'\nimport { pathToFileURL } from 'url'\nimport './store'\n\nconst isDevelopment = process.env.NODE_ENV === 'development'\n\nlet homeWin: BrowserWindow | null = null\nlet countWin: BrowserWindow | null = null\nlet mappingWin: BrowserWindow | null = null\n\nconst createHomeWindow = () => {\n  homeWin = new BrowserWindow({\n    width: 720,\n    height: 540,\n    webPreferences: {\n      nodeIntegration: false,\n      contextIsolation: true,\n      preload: join(__dirname, './preload.js'),\n    },\n    show: false,\n    autoHideMenuBar: true,\n    resizable: false,\n  })\n    .once('ready-to-show', () => {\n      homeWin?.show()\n    })\n    .on('closed', () => {\n      homeWin = null\n    })\n\n  if (isDevelopment) {\n    homeWin.loadURL('http://localhost:3000')\n    homeWin.webContents.toggleDevTools()\n  } else {\n    homeWin.loadURL(\n      pathToFileURL(join(__dirname, './renderer/index.html')).toString()\n    )\n  }\n}\n\nconst createCountWindow = (name: string) => {\n  countWin = new BrowserWindow({\n    width: 1080,\n    height: 720,\n    minWidth: 1080,\n    minHeight: 720,\n    webPreferences: {\n      nodeIntegration: false,\n      contextIsolation: true,\n      preload: join(__dirname, './preload.js'),\n    },\n    show: false,\n    autoHideMenuBar: true,\n  })\n    .once('ready-to-show', () => {\n      countWin?.show()\n    })\n    .on('closed', () => {\n      countWin = null\n    })\n\n  if (isDevelopment) {\n    countWin.loadURL(`http://localhost:3000/#${name}`)\n    countWin.webContents.toggleDevTools()\n  } else {\n    countWin.loadFile(`./renderer/index.html`, { hash: name })\n  }\n}\n\nconst createMappingWindow = () => {\n  mappingWin = new BrowserWindow({\n    width: 720,\n    height: 540,\n    webPreferences: {\n      nodeIntegration: false,\n      contextIsolation: true,\n      preload: join(__dirname, './preload.js'),\n    },\n    show: false,\n    autoHideMenuBar: true,\n    resizable: false,\n  })\n    .once('ready-to-show', () => {\n      mappingWin?.show()\n    })\n    .on('closed', () => {\n      mappingWin = null\n    })\n\n  if (isDevelopment) {\n    mappingWin.loadURL(`http://localhost:3000/#mapping`)\n    mappingWin.webContents.toggleDevTools()\n  } else {\n    mappingWin.loadFile(`./renderer/index.html`, { hash: 'mapping' })\n  }\n}\n\napp.whenReady().then(createHomeWindow)\n\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit()\n  }\n})\n\napp.on('activate', () => {\n  if (BrowserWindow.getAllWindows().length === 0) {\n    createHomeWindow()\n  }\n})\n\nipcMain.on('view', (e, name, value) => {\n  switch (name) {\n    case 'home': {\n      if (!homeWin) {\n        createHomeWindow()\n        countWin && countWin.close()\n        mappingWin && mappingWin.close()\n      } else homeWin.focus()\n      break\n    }\n    case 'count': {\n      if (!countWin) {\n        createCountWindow(value)\n        homeWin && homeWin.close()\n        mappingWin && mappingWin.close()\n      } else countWin.focus()\n      break\n    }\n    case 'mapping': {\n      if (!mappingWin) {\n        createMappingWindow()\n        homeWin && homeWin.close()\n        countWin && countWin.close()\n      } else mappingWin.focus()\n      break\n    }\n  }\n})\n\nipcMain.on('export', (e, name) => {\n  const id = dialog.showMessageBoxSync({\n    title: '\u5BFC\u51FA\u4EC0\u4E48',\n    message: '\u9009\u62E9\u5BFC\u51FA\u7EDF\u8BA1\u6570\u636E\u8FD8\u662F\u8F93\u5165\u8BB0\u5F55',\n    type: 'info',\n    buttons: ['\u53D6\u6D88', '\u8F93\u5165\u8BB0\u5F55', '\u7EDF\u8BA1\u6570\u636E'],\n  })\n\n  if (id !== 0) {\n    const file = dialog.showSaveDialogSync({\n      title: '\u5BFC\u51FA\u8BB0\u5F55\u4E3A CSV \u6587\u4EF6',\n      defaultPath: `\u3010${id === 1 ? '\u8F93\u5165\u8BB0\u5F55' : '\u7EDF\u8BA1\u6570\u636E'}\u3011${\n        name || '\u5BFC\u51FA\u7684\u8BB0\u5F55\u6587\u4EF6'\n      }.csv`,\n      filters: [{ name: 'CSV', extensions: ['csv'] }],\n    })\n    e.reply('export-reply', id, file)\n  }\n  e.reply('export-reply', 0)\n})\n\nipcMain.on('confirm', (e, message) => {\n  const id = dialog.showMessageBoxSync({\n    message,\n    title: '\u786E\u8BA4\u4E00\u4E0B',\n    type: 'warning',\n    buttons: ['\u53D6\u6D88', '\u786E\u5B9A'],\n  })\n\n  e.reply('confirm-reply', id !== 0)\n})\n", "import { ipcMain } from 'electron'\r\nimport Store from 'electron-store'\r\n\r\nconst store = new Store({\r\n  name: 'mapping-store',\r\n})\r\n\r\nipcMain.handle('store', (e, type, key, value) => {\r\n  switch (type) {\r\n    case 'set': {\r\n      store.set(key, value)\r\n      break\r\n    }\r\n    case 'get': {\r\n      return store.get(key)\r\n    }\r\n    case 'get-all': {\r\n      const arr = []\r\n      if (store.store) {\r\n        for (const [input, name] of Object.entries(store.store)) {\r\n          arr.push({ input, name })\r\n        }\r\n      }\r\n      return arr\r\n    }\r\n    case 'del': {\r\n      store.delete(key)\r\n      break\r\n    }\r\n  }\r\n  return\r\n})\r\n"],
  "mappings": "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",
  "names": []
}
